name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/clinia/
  GITHUB_USER: clinia-ci
  GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
  # Official NuGet Feed settings
  # NUGET_FEED: https://api.nuget.org/v3/index.json
  # NUGET_KEY: ${{ secrets.NUGET_KEY }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-latest, macos-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test -c Release -f net5.0
        
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: clinia/multi-tenant-csharp
          releases-only: true
        id: octokit

      - name: Pack
        if: matrix.os == 'ubuntu-18.04'
        run: |
          VERSION="${{ steps.octokit.outputs.tag }}"
          VERSION="${VERSION//v}"
          dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=$VERSION-ci.$(date +%Y%m%d%H%M%S) -o nupkg

      - name: Upload Artifact
        if: matrix.os == 'ubuntu-18.04'
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./nupkg/*.nupkg

  prerelease:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-18.04
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg

      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
          
  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101
          
      - name: Create Release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          VERSION="${VERSION//v}"
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg
          
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
          
#      - name: Push to NuGet Feed
#        run: dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY

          
      
    